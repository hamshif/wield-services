
deploy_env : dev
debug_mode : nope
runtime_env : docker
kube_context : docker-desktop
//    If value is "yup" Starts a dud process to enable starting process from shell
container_maintainance_mode: yup

//module configuration name should be unique in the project
boot : {

  provisioner : kubernetes.io/no-provisioner

  namespace : wielder-services
  name : boot
  image : "boot:dev"
  replicas : 1
  relativeCodePath : micros/java/boot/eve
  codePath : <PATH_TO_SUPER_PROJECT_ROOT>/micros/java/boot/eve
  mountPath : /storage
  capacityStorage : 200Mi

  nodePort : 30006
  port : 8006
  targetPort : 8080

  debugNodePort : 30007
  debugPort : 8007
  debugTargetPort : 8007

  observe_deploy : true
  observe_svc : false

  flask_app : app
  flask_env : development

  deploy_ports : [
    {
      name : boot
      containerPort : ${boot.targetPort}
    }
  ]

  service_ports : [
    {
      name : boot
      nodePort : ${boot.nodePort}
      port : ${boot.port}
      targetPort : ${boot.targetPort}
    }
  ]

  WieldServiceMode : {
    observe : true
    service_only : false
    debug_mode : true
    local_mount : true
  }
}

storage.volumeBindingMode : WaitForFirstConsumer

// A patch for PersistentVolume docker values
pv.spec.local : {
  path : ${boot.codePath}
}

pv.spec.nodeAffinity : {
  required : {
    nodeSelectorTerms : [
      {
        matchExpressions : [
          {
            key : kubernetes.io/hostname
            operator : In
            values : [
              ${kube_context}
            ]
          }
        ]
      }
    ]
  }
}
