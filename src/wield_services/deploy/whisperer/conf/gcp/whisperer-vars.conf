
deploy_env : dev
debug_mode : nope
runtime_env : gcp
kube_context : gke_rtp-gcp-poc_us-central1-a_wielder-container-cluster-master


//These properties are for deploying the service without project context
//They get overriden by project config
providers.gcp.zone: us-central1-a
providers.gcp.project = rtp-gcp-poc
providers.gcp.image_repo_zone: eu.gcr.io

//    If value is "yup" Starts a dud process to enable starting process from shell
container_maintainance_mode: nope


//module configuration name should be unique in the project
whisperer : {

  provisioner: kubernetes.io/gce-pd

  namespace : default

  //TODO make this namespace
  group : wielder

  name : whisperer
  image : ${providers.gcp.image_repo_zone}/${providers.gcp.project}/${whisperer.group}/whisperer":"latest
  replicas : 1

  relativeCodePath : micros/flask/whisperer
  codePath : <PATH_TO_SUPER_PROJECT_ROOT>/micros/flask/whisperer
  mountPath : /storage

  capacityStorage : 1Gi

  nodePort : 30002
  port : 8002
  targetPort : 5000

  debugNodePort : 30003
  debugPort : 8003
  debugTargetPort : 8003

  observe_deploy : true
  observe_svc : false

  flask_app : app
  flask_env : development


  deploy_ports : [
    {
      name : whisperer
      containerPort : ${whisperer.targetPort}
    }
  ]

  service_ports : [
    {
      name : whisperer
      nodePort : ${whisperer.nodePort}
      port : ${whisperer.port}
      targetPort : ${whisperer.targetPort}
    }
  ]
}

service.spec.loadBalancerSourceRanges : ${client_ips}

storage.parameters : {
  type : pd-ssd
  zone : ${providers.gcp.zone}
  #  fsType: ext4
}
